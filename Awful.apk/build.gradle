buildscript {
    ext.kotlin_version = '1.2.10'

    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://maven.google.com' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'

repositories {
    jcenter()
    maven { url 'https://maven.google.com' }
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'https://jitpack.io' }
}

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    defaultConfig {
        applicationId = "com.ferg.awfulapp"
        minSdkVersion 15
        targetSdkVersion 26
        resConfigs "en"

        // Stops the Gradle pluginâ€™s automatic rasterization of vectors
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // ugh I just want to run unit tests without having to avoid logging
        // this might make things difficult when we develop a comprehensive test suiahahaha
        testOptions {
            unitTests.returnDefaultValues = true
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    buildTypes{

        debug{

            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            resValue "string", "app_name", "Awful (debug)"
            minifyEnabled false
            shrinkResources false
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
        }

        release{
            resValue "string", "app_name", "Awful"
            minifyEnabled false
            shrinkResources false
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    task copyThreadTags(type: Copy) {
        // Run this Gradle task to import Awful thread tags into the app, renaming as necessary -
        // this is meant to be a quick way to update when tags are added to the repo
        // Call it by passing the path to the folder containing the tag files (other files and
        // subfolders are ignored)
        String pathParam = 'tagFolderPath'
        if (!project.hasProperty(pathParam)) {
            println 'ERROR - You need to supply a path for the source folder!'
            println "        Call this task with the parameter -P$pathParam=\"full_path\""
            return
        }
        File srcPath = file (project.property(pathParam))
        if (!srcPath.directory) {
            println "ERROR - $srcPath is not a valid directory!"
            return
        }
        println "Copying tag files from $srcPath"
        from(srcPath) { include '**/*.png' }
        into "$projectDir/src/main/res/drawable-ldpi"
        rename { fileName -> fileName.replace("-", "_") }
        rename ~/(.).(.)stars(.*)/, 'rating_$1_$2stars$3'
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:design:26.1.0'

    // used to fix SSL issues on older devices - old version so it works on the API 18 emulator THANKS GOOGLE
    compile 'com.google.android.gms:play-services-auth:9.2.1'
    //compile 'com.mcxiaoke.volley:library:1.0.19'
    compile 'com.github.samkirton:android-volley:9aba4f5f86'
    compile 'com.google.code.gson:gson:2.8.0'

    compile 'org.jsoup:jsoup:1.11.2'
    compile 'com.jakewharton.threetenabp:threetenabp:1.0.4'
    compile 'com.samskivert:jmustache:1.13'

    compile group: 'cz.msebera.android' , name: 'httpclient', version: '4.4.1.1'
    compile ('org.apache.httpcomponents:httpmime:4.3.1') {
        exclude module: "httpclient"
    }
    compile 'org.apache.httpcomponents:httpcore:4.3.1'

    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'com.ToxicBakery.viewpager.transforms:view-pager-transforms:1.2.32@aar'
    compile 'com.github.orangegangsters:swipy:1.2.3@aar'
    compile 'com.bignerdranch.android:expandablerecyclerview:2.1.1'
    compile 'com.jakewharton:butterknife:8.5.1'
    compile 'com.github.chrisbanes:PhotoView:1.3.1'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
//    compile 'com.github.OrangeGangsters:SwipyRefreshLayout:15eeb9444d'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.7@aar') {
        transitive = true;
    }
    compile 'com.github.rubensousa:BottomSheetBuilder:1.5.1'

    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
}
