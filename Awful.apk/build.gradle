buildscript {
    ext.kotlin_version = '1.3.41'

    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

repositories {
    google()
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'https://jitpack.io' }
}

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId = "com.ferg.awfulapp"
        minSdkVersion 21
        targetSdkVersion 28
        resConfigs "en"

        // Stops the Gradle pluginâ€™s automatic rasterization of vectors
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // ugh I just want to run unit tests without having to avoid logging
        // this might make things difficult when we develop a comprehensive test suiahahaha
        testOptions {
            unitTests.returnDefaultValues = true
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    buildTypes{

        debug{

            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            resValue "string", "app_name", "Awful (debug)"
            minifyEnabled false
            shrinkResources false
            aaptOptions.cruncherEnabled = false // disable PNG crunching
            ext.alwaysUpdateBuildId = false // generates unique build IDs for Crashlytics, slows build
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
        }

        release{
            resValue "string", "app_name", "Awful"
            minifyEnabled false
            shrinkResources false
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    task copyThreadTags {
        // Run this Gradle task to import Awful thread tags into the app, renaming as necessary -
        // this is meant to be a quick way to update when tags are added to the repo
        // Call it by passing the path to the folder containing the tag files (other files and
        // subfolders are ignored)
        doFirst {
            String pathParam = 'tagFolderPath'
            if (!project.hasProperty(pathParam)) {
                println("ERROR - You need to supply a path for the source folder!\nCall this task with the parameter -P$pathParam=\"full_path\"")
                throw new StopActionException()
            }
            File srcPath = file(project.findProperty(pathParam))
            if (!srcPath.directory) {
                println("ERROR - $srcPath is not a valid directory!")
                throw new StopActionException()
            }
            println "Copying tag files from $srcPath"
            copy {
                from(srcPath) { include '**/*.png' }
                into "$projectDir/src/main/res/drawable-ldpi"
                rename { fileName -> fileName.replace("-", "_") }
                rename ~/(.).(.)stars(.*)/, 'rating_$1_$2stars$3'
            }
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    // these are all needed to override some old versions that are dependencies... somewhere
    implementation 'com.android.support:support-media-compat:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'

    // used to fix SSL issues on older devices
    implementation 'com.google.android.gms:play-services-auth:16.0.1'
    implementation 'com.android.volley:volley:1.1.1'


    implementation 'com.google.code.gson:gson:2.8.6'

    implementation 'org.jsoup:jsoup:1.13.1'
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.4'
    implementation 'com.samskivert:jmustache:1.15'

    implementation group: 'cz.msebera.android' , name: 'httpclient', version: '4.4.1.1'
    implementation ('org.apache.httpcomponents:httpmime:4.3.1') {
        exclude module: "httpclient"
    }
    implementation 'org.apache.httpcomponents:httpcore:4.3.1'

    implementation 'org.apache.commons:commons-lang3:3.8.1'
    implementation 'com.ToxicBakery.viewpager.transforms:view-pager-transforms:1.3.7@aar'
    implementation 'com.github.orangegangsters:swipy:1.2.3@aar'
    implementation 'com.bignerdranch.android:expandablerecyclerview:2.1.1'
    implementation 'com.jakewharton:butterknife:8.8.1'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.github.chrisbanes:PhotoView:1.3.1'
    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    kapt 'com.jakewharton:butterknife-compiler:8.8.1'
//    implementation 'com.github.OrangeGangsters:SwipyRefreshLayout:15eeb9444d'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') {
        transitive = true
    }
    implementation 'com.github.rubensousa:BottomSheetBuilder:1.5.1'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
}
